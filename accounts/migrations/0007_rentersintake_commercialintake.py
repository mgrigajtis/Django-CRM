# Generated by Django 4.2.1 on 2024-08-14 20:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0011_modify_phone_req'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0006_rename_previous_billing_country_account_previous_residency_country'),
    ]

    operations = [
        migrations.CreateModel(
            name='RentersIntake',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('secondary_owner_name', models.CharField(blank=True, max_length=255, null=True)),
                ('secondary_owner_date_of_birth', models.DateField(blank=True, null=True)),
                ('secondary_owner_email', models.EmailField(blank=True, max_length=255, null=True)),
                ('lease_start_date', models.DateField(blank=True, null=True)),
                ('limit_of_coverage_desired', models.BooleanField(blank=True, null=True)),
                ('has_dogs', models.BooleanField()),
                ('number_of_dogs', models.IntegerField(blank=True, null=True)),
                ('dog_breeds', models.CharField(blank=True, max_length=255, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='renters_intake_accoumt', to='accounts.account')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='renters_intake_org', to='common.org')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Last Modified By')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommercialIntake',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified At')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('business_name', models.CharField(max_length=255, verbose_name='Business Name')),
                ('business_address_line_1', models.CharField(max_length=255, verbose_name='Business Address Line 1')),
                ('business_address_line_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Business Address Line 2')),
                ('business_city', models.CharField(max_length=255, verbose_name='Business City')),
                ('business_state', models.CharField(max_length=255, verbose_name='Business State')),
                ('business_postal_code', models.CharField(max_length=10, verbose_name='Business Postal Code')),
                ('business_mailing_address_line_1', models.CharField(max_length=255, verbose_name='Business Mailing Address Line 1')),
                ('business_mailing_address_line_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Business Mailing Address Line 2')),
                ('business_mailing_city', models.CharField(max_length=255, verbose_name='Business Mailing City')),
                ('business_mailing_state', models.CharField(max_length=255, verbose_name='Business Mailing State')),
                ('business_mailing_postal_code', models.CharField(max_length=10, verbose_name='Business Mailing Postal Code')),
                ('business_website', models.CharField(blank=True, max_length=255, null=True, verbose_name='Business Website')),
                ('nature_of_business', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nature of Business\\Services Offered')),
                ('business_type', models.CharField(choices=[('Individual/Sole Proprietor', 'Individual/Sole Proprietor'), ('Corporation', 'Corporation'), ('Joint Venture', 'Joint Venture'), ('Partnership', 'Partnership'), ('LLC', 'LLC'), ('Trust', 'Trust'), ('S-Corp', 'S-Corp'), ('Not For Profit', 'Not For Profit')], max_length=64, verbose_name='Type of Business')),
                ('coverage_requested', multiselectfield.db.fields.MultiSelectField(choices=[('General Liability Insurance', 'General Liability Insurance'), ('Commercial Property Insurance', 'Commercial Property Insurance'), ("Workers' Compensation Insurance", "Workers' Compensation Insurance"), ('Commercial Auto Insurance', 'Commercial Auto Insurance'), ('Professional Liability Insurance (Errors & Omissions Insurance)', 'Professional Liability Insurance (Errors & Omissions Insurance)'), ("Business Owner's Policy (BOP)", "Business Owner's Policy (BOP)"), ('Commercial Umbrella Insurance', 'Commercial Umbrella Insurance'), ('Cyber Liability Insurance', 'Cyber Liability Insurance'), ('Product Liability Insurance', 'Product Liability Insurance'), ('Inland Marine Insurance', 'Inland Marine Insurance'), ('Commercial Flood Insurance', 'Commercial Flood Insurance'), ('Commercial Crime Insurance', 'Commercial Crime Insurance'), ('Directors and Officers (D&O) Insurance', 'Directors and Officers (D&O) Insurance'), ('Employment Practices Liability Insurance (EPLI)', 'Employment Practices Liability Insurance (EPLI)'), ("Builder's Risk Insurance", "Builder's Risk Insurance")], max_length=483)),
                ('liability_limit_requested', models.CharField(choices=[('$2000000/$1000000', '$2000000/$1000000'), ('$1000000/$500000', '$1000000/$500000'), ('$500000/$500000', '$500000/$500000'), ('$300000/$600000', '$300000/$600000'), ('Other', 'Other')], max_length=64, verbose_name='Liability Limits Requested')),
                ('number_of_owners', models.IntegerField(verbose_name='Number of Owners')),
                ('number_of_employees', models.IntegerField(verbose_name='Number of Employees')),
                ('employee_annual_payroll', models.BigIntegerField(verbose_name='Employee Annual Payroll')),
                ('annual_revenue', models.BigIntegerField(verbose_name='Annual Revenue')),
                ('years_in_business', models.IntegerField(verbose_name='Years in Business')),
                ('years_experience', models.IntegerField(verbose_name='Years Experience')),
                ('number_of_contracted_employees', models.IntegerField(verbose_name='Number of Contracted Employees')),
                ('cost_of_contracted_employees', models.IntegerField(verbose_name='Cost of Contracted Employees')),
                ('contractors_liability_required', models.BooleanField(default=False, verbose_name='Is Contractor Liability Coverage Required?')),
                ('additional_insured', models.CharField(blank=True, max_length=255, null=True, verbose_name='Additional Insured')),
                ('current_insurance_company', models.CharField(blank=True, max_length=255, null=True, verbose_name='Current Insurance Company')),
                ('effective_date', models.DateField(blank=True, null=True, verbose_name='Effective Date')),
                ('current_bodily_injury_limits', models.CharField(blank=True, max_length=255, null=True, verbose_name='Current Bodily Injury Limits')),
                ('any_losses', models.BooleanField(default=False, verbose_name='Any Losses?')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='commercial_intake_account', to='accounts.account')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commercial_intake_org', to='common.org')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Last Modified By')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
